#CONSTANT 
REPORT_PATH=/home/idi/report/task/
w=40
d=8

#Lay thong tin nhan vien, phong ban
#EMPLOYEE_INFO

GET_NAME_BY_ACCOUNT=SELECT FULL_NAME FROM IDIGROUP.EMPLOYEE_INFO WHERE LOGIN_ACCOUNT = ?	

GET_EMPLOYEES=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID AND E.WORK_STATUS NOT IN('DaThoiViec') ORDER BY FULL_NAME
	
GET_ALL_EMPLOYEES=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID ORDER BY FULL_NAME	

GET_EMPLOYEES_BY_DEPARTMENT=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID AND DEPARTMENT = ? \
	AND E.WORK_STATUS NOT IN('DaThoiViec') ORDER BY FULL_NAME

GET_EMPLOYEES_FOR_SUB=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID AND E.WORK_STATUS NOT IN('DaThoiViec') ORDER BY FULL_NAME

GET_TASK_SUBSCRIBER=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID 
		
#DEPARTMENT	
GET_DEPARTMENTS=SELECT * FROM IDIGROUP.DEPARTMENT ORDER BY DEPARTMENT_ID

#TASK
GET_TASK=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON OWNED_BY=E.EMPLOYEE_ID WHERE TASK_ID = ?

GET_TASK_EXISTS_BY_NAME=SELECT TASK_ID FROM IDIGROUP.TASK WHERE TASK_NAME = ? LIMIT 1

GET_TASKS=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON OWNED_BY=E.EMPLOYEE_ID ORDER BY UPDATE_TS DESC

GET_TASKS_OWNER=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON OWNED_BY=E.EMPLOYEE_ID WHERE OWNED_BY = ? ORDER BY UPDATE_TS DESC

GET_TASKS_RELATED=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T, IDIGROUP.EMPLOYEE_INFO E WHERE OWNED_BY=E.EMPLOYEE_ID

GET_SUBSCRIBER=SELECT SUBSCRIBER FROM IDIGROUP.TASK WHERE TASK_ID = ?

GET_TASKS_BY_SEARCH=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON T.OWNED_BY=E.EMPLOYEE_ID 
	
GET_TASKS_BY_SEARCH_FOR_RELATED=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON T.OWNED_BY=E.EMPLOYEE_ID WHERE \
	(E.FULL_NAME LIKE ? OR T.TASK_ID LIKE ? OR T.TASK_NAME LIKE ? OR T.AREA LIKE ? OR T.STATUS LIKE ? OR PLANED_FOR LIKE ?) \
	AND TASK_ID NOT IN (%TASK_RELATED%) ORDER BY T.TASK_ID, T.UPDATE_TS DESC
	
GET_TASKS_FOR_REPORT=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON T.OWNED_BY=E.EMPLOYEE_ID WHERE \
 ((DATE(T.CREATION_DATE) >= '%FROM_DATE%' AND DATE(T.CREATION_DATE) <= '%TO_DATE%') OR (DATE(T.UPDATE_TS) >= '%FROM_DATE%' AND DATE(T.UPDATE_TS) <= '%TO_DATE%'))

GET_SUMMARY_TASK_FOR_CHAT=SELECT DISTINCT '' AS FULL_NAME, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) %ID%) AS TOTAL, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS IN ('%NEW%') %ID%) AS NEW, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%INPROGRESS%' %ID%) AS INPROGRESS, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%STOPED%' %ID%) AS STOPED, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%INVALID%' %ID%) AS INVALID, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%REVIEWING%' %ID%) AS REVIEWING, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%COMPLETED%' %ID%) AS COMPLETED 
 
GET_SUMMARY_TASK=SELECT DISTINCT FULL_NAME, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND OWNED_BY=%ID%) AS TOTAL, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS IN ('%NEW%') AND OWNED_BY=%ID%) AS NEW, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%INPROGRESS%' AND OWNED_BY=%ID%) AS INPROGRESS, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%STOPED%' AND OWNED_BY=%ID%) AS STOPED, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%INVALID%' AND OWNED_BY=%ID%) AS INVALID, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%REVIEWING%' AND OWNED_BY=%ID%) AS REVIEWING, \
 (SELECT COUNT(*) FROM IDIGROUP.TASK WHERE ((DATE(CREATION_DATE) >= '%FROM_DATE%' AND DATE(CREATION_DATE) <= '%TO_DATE%') OR (DATE(UPDATE_TS) >= '%FROM_DATE%' AND DATE(UPDATE_TS) <= '%TO_DATE%')) AND STATUS = '%COMPLETED%' AND OWNED_BY=%ID%) AS COMPLETED \
 FROM IDIGROUP.EMPLOYEE_INFO WHERE EMPLOYEE_ID = %ID% 
 
INSERT_TASK=INSERT INTO IDIGROUP.TASK(TASK_NAME, STATUS, CREATED_BY, OWNED_BY, SECOND_OWNER, VERIFY_BY, DUE_DATE, \
	CREATION_DATE, TYPE, AREA, PRIORITY, PLANED_FOR, UPDATE_TS, ESTIMATE, ESTIMATE_TIME_TYPE, TIME_SPENT, TIME_SPENT_TYPE, DESCRIPTION) \
	VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

UPDATE_TASK=UPDATE IDIGROUP.TASK SET TASK_NAME = ?, OWNED_BY = ?, SECOND_OWNER = ?, VERIFY_BY = ?, UPDATE_ID = ?,UPDATE_TS = ?, RESOLVED_BY = ?, \
	DUE_DATE = ?, RESOLUTION_DATE = ?, TYPE = ?, AREA = ?, PRIORITY = ?, STATUS = ?, PLANED_FOR = ?, TIME_SPENT = ?, TIME_SPENT_TYPE = ?, \
	ESTIMATE = ?, ESTIMATE_TIME_TYPE = ?, DESCRIPTION = ?, REVIEW_COMMENT = ? WHERE TASK_ID = ?
	
UPDATE_SUBSCRIBER=UPDATE IDIGROUP.TASK SET SUBSCRIBER = ? WHERE TASK_ID	= ?

UPDATE_RELATED=UPDATE IDIGROUP.TASK SET RELATED = ? WHERE TASK_ID = ?

GET_EMAIL_LIST=SELECT EMAIL FROM EMPLOYEE_INFO WHERE EMPLOYEE_ID IN (?)

GET_RELATED_IDS=SELECT OWNED_BY, CREATED_BY, SECOND_OWNER, VERIFY_BY, SUBSCRIBER FROM TASK WHERE TASK_ID = ?

GET_STATUS=SELECT DISTINCT STATUS FROM IDIGROUP.TASK

GET_OWNER_OF_TASKS=SELECT DISTINCT E.EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, IDIGROUP.DEPARTMENT D, \
	IDIGROUP.TASK T WHERE T.OWNED_BY = E.EMPLOYEE_ID AND E.DEPARTMENT = D.DEPARTMENT_ID
	
#TASK_COMMENT
GET_TASK_COMMENTS=SELECT C.*, E.FULL_NAME AS COMMENTED_BY_NANE FROM IDIGROUP.TASK_COMMENT C LEFT JOIN IDIGROUP.EMPLOYEE_INFO E \
 ON E.EMPLOYEE_ID = C.COMMENTED_BY WHERE C.TASK_ID = ? ORDER BY C.COMMENT_INDEX DESC
 
GET_MAX_COMMENT_INDEX=SELECT COUNT(*) FROM IDIGROUP.TASK_COMMENT WHERE TASK_ID = ?

INSERT_TASK_COMMENT=INSERT INTO IDIGROUP.TASK_COMMENT(COMMENT_INDEX, TASK_ID, COMMENTED_BY, CONTENT) VALUES(?, ?, ?, ?)

#Query for login
GET_USER_BY_USERNAME= SELECT * FROM IDIGROUP.user WHERE username=?
GET_USER_ROLE_BY_IDUSER= SELECT * FROM IDIGROUP.user_role WHERE idUser=?