#CONSTANT 
REPORT_PATH=/home/idi/report/task/

#Lay thong tin nhan vien, phong ban
#EMPLOYEE_INFO
GET_EMPLOYEES=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID AND E.WORK_STATUS NOT IN('DaThoiViec') ORDER BY FULL_NAME
	
GET_ALL_EMPLOYEES=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID ORDER BY FULL_NAME	

GET_EMPLOYEES_BY_DEPARTMENT=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID AND DEPARTMENT = ? \
	AND E.WORK_STATUS NOT IN('DaThoiViec') ORDER BY FULL_NAME

GET_EMPLOYEES_FOR_SUB=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID AND E.WORK_STATUS NOT IN('DaThoiViec') ORDER BY FULL_NAME

GET_TASK_SUBSCRIBER=SELECT EMPLOYEE_ID, FULL_NAME, JOB_TITLE, WORK_STATUS, LOGIN_ACCOUNT, DEPARTMENT, \
	D.DEPARTMENT_NAME, PHONE_NO, EMAIL FROM IDIGROUP.EMPLOYEE_INFO E, \
	IDIGROUP.DEPARTMENT D WHERE E.DEPARTMENT = D.DEPARTMENT_ID 
		
#DEPARTMENT	
GET_DEPARTMENTS=SELECT * FROM IDIGROUP.DEPARTMENT ORDER BY DEPARTMENT_ID

#TASK
GET_TASK=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON OWNED_BY=E.EMPLOYEE_ID WHERE TASK_ID = ?

GET_TASKS=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON OWNED_BY=E.EMPLOYEE_ID ORDER BY UPDATE_TS DESC

GET_TASKS_RELATED=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T, IDIGROUP.EMPLOYEE_INFO E WHERE OWNED_BY=E.EMPLOYEE_ID

GET_SUBSCRIBER=SELECT SUBSCRIBER FROM IDIGROUP.TASK WHERE TASK_ID = ?

GET_TASKS_BY_SEARCH = SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON T.OWNED_BY=E.EMPLOYEE_ID WHERE \
	(E.FULL_NAME LIKE ? OR T.TASK_ID LIKE ? OR T.TASK_NAME LIKE ? OR T.AREA LIKE ? OR T.STATUS LIKE ? OR PLANED_FOR LIKE ?) ORDER BY T.UPDATE_TS DESC
	
GET_TASKS_BY_SEARCH_FOR_RELATED=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON T.OWNED_BY=E.EMPLOYEE_ID WHERE \
	(E.FULL_NAME LIKE ? OR T.TASK_ID LIKE ? OR T.TASK_NAME LIKE ? OR T.AREA LIKE ? OR T.STATUS LIKE ? OR PLANED_FOR LIKE ?) AND TASK_ID NOT IN (%TASK_RELATED%) ORDER BY T.UPDATE_TS DESC
	
GET_TASKS_FOR_REPORT=SELECT T.*, E.FULL_NAME FROM IDIGROUP.TASK T LEFT JOIN IDIGROUP.EMPLOYEE_INFO E ON T.OWNED_BY=E.EMPLOYEE_ID WHERE \
 ((DATE(T.CREATION_DATE) >= '%FROM_DATE%' AND DATE(T.CREATION_DATE) <= '%TO_DATE%') OR (DATE(T.UPDATE_TS) >= '%FROM_DATE%' AND DATE(T.UPDATE_TS) <= '%TO_DATE%'))
 	
INSERT_TASK=INSERT INTO IDIGROUP.TASK(TASK_NAME, CREATED_BY, OWNED_BY, SECOND_OWNER, VERIFY_BY, DUE_DATE, \
	CREATION_DATE, TYPE, AREA, PRIORITY, PLANED_FOR, UPDATE_TS, ESTIMATE, ESTIMATE_TIME_TYPE, DESCRIPTION) \
	VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

UPDATE_TASK=UPDATE IDIGROUP.TASK SET TASK_NAME = ?, OWNED_BY = ?, SECOND_OWNER = ?, VERIFY_BY = ?, UPDATE_ID = ?,UPDATE_TS = ?, RESOLVED_BY = ?, \
	DUE_DATE = ?, RESOLUTION_DATE = ?, TYPE = ?, AREA = ?, PRIORITY = ?, STATUS = ?, PLANED_FOR = ?, TIME_SPENT = ?, TIME_SPENT_TYPE = ?, \
	ESTIMATE = ?, ESTIMATE_TIME_TYPE = ?, DESCRIPTION = ?, REVIEW_COMMENT = ? WHERE TASK_ID = ?
	
UPDATE_SUBSCRIBER=UPDATE IDIGROUP.TASK SET SUBSCRIBER = ? WHERE TASK_ID	= ?

UPDATE_RELATED=UPDATE IDIGROUP.TASK SET RELATED = ? WHERE TASK_ID	= ?

GET_EMAIL_LIST=SELECT EMAIL FROM EMPLOYEE_INFO WHERE EMPLOYEE_ID IN (?)

GET_RELATED_IDS=SELECT OWNED_BY, CREATED_BY, SECOND_OWNER, VERIFY_BY, SUBSCRIBER FROM TASK WHERE TASK_ID = ?
	
#TASK_COMMENT
GET_TASK_COMMENTS=SELECT C.*, E.FULL_NAME AS COMMENTED_BY_NANE FROM IDIGROUP.TASK_COMMENT C, EMPLOYEE_INFO E WHERE TASK_ID = ? AND E.EMPLOYEE_ID = C.COMMENTED_BY ORDER BY COMMENT_INDEX DESC

GET_MAX_COMMENT_INDEX=SELECT COUNT(*) FROM IDIGROUP.TASK_COMMENT WHERE TASK_ID = ?

INSERT_TASK_COMMENT=INSERT INTO IDIGROUP.TASK_COMMENT(COMMENT_INDEX, TASK_ID, COMMENTED_BY, CONTENT) VALUES(?, ?, ?, ?)